{"version":3,"sources":["../node_modules/email-validator/index.js","axios.js","containers/Auth/Signup/Signup.js"],"names":["tester","exports","validate","email","length","test","parts","split","some","part","axiosInstance","axios","create","baseURL","headers","Signup","useState","isLandlord","setIsLandlord","showPassword","setShowPassword","error","setError","passRef","useRef","passConfRef","nameRef","lNameRef","phoneRef","emailRef","className","onSubmit","e","preventDefault","current","value","emailValidator","post","name","last_name","phone_number","password","role","then","res","console","log","catch","er","response","data","message","onClick","tabIndex","type","placeholder","ref","minLength","prev"],"mappings":"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","file":"static/js/13.135e7f1e.chunk.js","sourcesContent":["\"use strict\";\r\n\r\nvar tester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\r\n// Thanks to:\r\n// http://fightingforalostcause.net/misc/2006/compare-email-regex.php\r\n// http://thedailywtf.com/Articles/Validating_Email_Addresses.aspx\r\n// http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses/201378#201378\r\nexports.validate = function(email)\r\n{\r\n\tif (!email)\r\n\t\treturn false;\r\n\t\t\r\n\tif(email.length>254)\r\n\t\treturn false;\r\n\r\n\tvar valid = tester.test(email);\r\n\tif(!valid)\r\n\t\treturn false;\r\n\r\n\t// Further checking of some things regex can't handle\r\n\tvar parts = email.split(\"@\");\r\n\tif(parts[0].length>64)\r\n\t\treturn false;\r\n\r\n\tvar domainParts = parts[1].split(\".\");\r\n\tif(domainParts.some(function(part) { return part.length>63; }))\r\n\t\treturn false;\r\n\r\n\treturn true;\r\n}","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:3005/api',\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default axiosInstance;","import React, { useRef, useState } from \"react\";\r\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\r\nimport { HiArrowNarrowRight } from \"react-icons/hi\";\r\nimport * as emailValidator from 'email-validator';\r\nimport { GoCheck } from \"react-icons/go\";\r\n\r\nimport axios from '../../../axios';\r\n\r\nconst Signup = () => {\r\n  const [isLandlord, setIsLandlord] = useState();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const passRef = useRef();\r\n  const passConfRef = useRef();\r\n  const nameRef = useRef();\r\n  const lNameRef = useRef();\r\n  const phoneRef = useRef();\r\n  const emailRef = useRef();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      passRef.current.value === '' ||\r\n      nameRef.current.value === '' ||\r\n      lNameRef.current.value === '' ||\r\n      emailRef.current.value === '' ||\r\n      passConfRef.current.value === '' ||\r\n      phoneRef.current.value === ''\r\n    ) return setError('Please fill all of the fields');\r\n    \r\n    if (!emailValidator.validate(emailRef.current.value))\r\n      return setError('Please provide valid email address');\r\n      \r\n    if (passConfRef.current.value !== passRef.current.value)\r\n      return setError('Passwords are not the same');  \r\n\r\n    if (phoneRef.current.value.length < 7 || phoneRef.current.value.length > 15) \r\n      return setError('Please provide valid phone number');\r\n\r\n    axios.post('/users/signup', {\r\n      name: nameRef.current.value,\r\n      last_name: lNameRef.current.value,\r\n      email: emailRef.current.value,\r\n      phone_number: phoneRef.current.value,\r\n      password: passRef.current.value,\r\n      role: isLandlord ? 'landlord' : 'user'\r\n    }).then(res => {\r\n      console.log(res);\r\n      setError(null);\r\n    }).catch(er => {\r\n      if (er.response)\r\n        setError(er.response.data.message)\r\n      else setError(er.message);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className=\"auth__body\" onSubmit={(e) => onSubmit(e)}>\r\n      {error && <p className=\"input__invalid\">{error}</p>}\r\n      <div className=\"flex jcse mb-2\">\r\n        <div \r\n          className={`input__checkbox-wrapper mr-lg ${!isLandlord ? 'input__checkbox-wrapper--active' : ''}`} \r\n          onClick={() => setIsLandlord(false)}\r\n          tabIndex=\"0\">\r\n            <span className=\"input__checkbox mr-5\">\r\n              {!isLandlord && <GoCheck className=\"icon icon--tertiary\" />}\r\n            </span>\r\n            I am a student\r\n        </div>\r\n        <div \r\n          className={`input__checkbox-wrapper ${isLandlord ? 'input__checkbox-wrapper--active' : ''}`}\r\n          onClick={() => setIsLandlord(true)}\r\n          tabIndex=\"0\">\r\n            <span className=\"input__checkbox mr-5\">\r\n              {isLandlord && <GoCheck className=\"icon icon--tertiary\" />}\r\n            </span>\r\n            I am a landlord\r\n        </div>\r\n      </div>\r\n      <label className=\"input__label mb-15\">\r\n        <input \r\n          className=\"input input--main auth__input\" \r\n          type=\"text\" \r\n          placeholder=\"Your email address\"\r\n          ref={emailRef} />\r\n        <span className=\"input__label-text\">Your email address</span>\r\n      </label>\r\n      <div className=\"flex mb-15\">\r\n        <label className=\"input__label\">\r\n          <input \r\n            className=\"input input--main auth__input auth__input--sm mr-15\" \r\n            type=\"text\" \r\n            placeholder=\"Your name\"\r\n            ref={nameRef} />\r\n          <span className=\"input__label-text\">Your name</span>\r\n        </label>\r\n        <label className=\"input__label\">\r\n          <input \r\n            className=\"input input--main auth__input auth__input--sm\" \r\n            type=\"text\" \r\n            placeholder=\"Your last name\"\r\n            ref={lNameRef} />\r\n          <span className=\"input__label-text\">Your last name</span>\r\n        </label>\r\n      </div>\r\n      <label className=\"input__label mb-15\">\r\n        <input \r\n          className=\"input input--main auth__input\" \r\n          type=\"number\" \r\n          placeholder=\"Your phone number\"\r\n          ref={phoneRef} />\r\n        <span className=\"input__label-text\">Your phone number</span>\r\n      </label>\r\n      <label className=\"input__label mb-15\">\r\n        <input \r\n          className=\"input input--main auth__input\" \r\n          placeholder=\"Your password\" \r\n          type=\"password\"\r\n          minLength=\"6\"\r\n          ref={passRef} />\r\n        <button \r\n          type=\"button\"\r\n          className=\"input__btn\" \r\n          onClick={() => {\r\n            setShowPassword(prev => !prev);\r\n            passRef.current.type === 'password' \r\n              ? passRef.current.type = 'text' \r\n              : passRef.current.type = 'password';\r\n          }}>\r\n            {!showPassword\r\n              ? <BsEyeSlash className=\"icon--sm icon--grey-l\" />\r\n              : <BsEye className=\"icon--sm icon--tertiary\" />\r\n            }\r\n        </button>\r\n        <span className=\"input__label-text\">Your password (minimum 6 characters)</span>\r\n      </label>\r\n      <label className=\"input__label mb-15\">\r\n        <input \r\n          className=\"input input--main\" \r\n          type=\"password\" \r\n          placeholder=\"Confirm your password\"\r\n          ref={passConfRef} />\r\n        <span className=\"input__label-text\">Password confirm</span>\r\n      </label>\r\n      <button className=\"btn btn--cta btn--arrow\" type=\"submit\">\r\n        Sign up\r\n        <HiArrowNarrowRight className=\"icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Signup;"],"sourceRoot":""}