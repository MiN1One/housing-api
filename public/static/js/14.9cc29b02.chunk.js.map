{"version":3,"sources":["containers/Adview/Rooms/Rooms.js"],"names":["SwiperCore","use","Navigation","Rooms","data","selectedIndex","setSelectedIndex","discount","useState","swiper","setSwiper","history","useHistory","location","useLocation","useEffect","update","options","map","el","i","classes","push","className","join","tabIndex","onClick","pathname","setTimeout","alt","src","img","offers","length","numberOfRooms","condition","kitchen","bath","price","id","simulateTouch","slidesPerView","spaceBetween","onInit","sw","navigation","nextEl","prevEl","disabledClass","React","memo"],"mappings":"6RAcAA,IAAWC,IAAI,CAACC,MAEhB,IAAMC,EAAQ,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,iBAAiC,KAAfC,SAC1BC,mBAAS,OADgC,mBAC9DC,EAD8D,KACtDC,EADsD,KAE/DC,EAAUC,cACVC,EAAWC,cAEjBC,qBAAU,kBAAMN,GAAUA,EAAOO,YAEjC,IAAMC,EAAO,OAAGb,QAAH,IAAGA,OAAH,EAAGA,EAAMc,KAAI,SAACC,EAAIC,GAC7B,IAAMC,EAAU,CAAC,eAEjB,OADID,IAAMf,GAAegB,EAAQC,KAAK,uBAEpC,eAAC,IAAD,CACEC,UAAWF,EAAQG,KAAK,KAExBC,SAAS,IACTC,QAAS,WACPpB,EAAiBc,GACjBT,EAAQW,KAAR,UAAgBT,EAASc,SAAzB,MACAC,YAAW,WACTjB,EAAQW,KAAR,UAAgBT,EAASc,SAAzB,eACC,IATP,UAWE,yBAAQJ,UAAU,sBAAlB,UACE,qBAAKA,UAAU,mBAAmBM,IAAI,WAAWC,IAAKC,MACrDX,IAAMf,GAAiB,qBAAKkB,UAAU,qBAAf,sBACvBJ,EAAGa,QAAUb,EAAGa,OAAOC,OAAS,GAC/B,uBAAMV,UAAU,6CAAhB,UAEGJ,EAAGa,OAAOC,OAFb,iBAMJ,sBAAKV,UAAU,oBAAf,UACE,uBAAMA,UAAU,qBAAhB,yBAAkDH,EAAE,KACpD,sBAAKG,UAAU,wBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAAYA,UAAU,6BADxB,UAEUJ,EAAGe,iBAEb,sBAAKX,UAAU,gBAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,6BAD7B,cAEcJ,EAAGgB,aAEjB,sBAAKZ,UAAU,gBAAf,UACE,cAAC,IAAD,CAAaA,UAAU,6BADzB,YAEYJ,EAAGiB,WAEf,sBAAKb,UAAU,WAAf,UACE,cAAC,IAAD,CAAWA,UAAU,6BADvB,aAEaJ,EAAGkB,cAIpB,qBAAKd,UAAU,sBAAf,SACE,uBAAMA,UAAU,qBAAhB,cACIJ,EAAGmB,MACL,sBAAMf,UAAU,OAAhB,kCA3CCH,MAkDX,OACE,sBAAKG,UAAU,QAAQgB,GAAG,UAA1B,UACE,oBAAIhB,UAAU,2BAAd,0BACA,sBAAKA,UAAU,sBAAf,UACE,wBAAQA,UAAU,+BAAlB,SACE,cAAC,IAAD,CAAsBA,UAAU,0BAElC,wBAAQA,UAAU,+BAAlB,SACE,cAAC,IAAD,CAAyBA,UAAU,0BAErC,sBAAMA,UAAU,oBAAhB,2CAEF,8BACA,cAAC,IAAD,CACEA,UAAU,cACViB,eAAe,EACfC,cAAe,EACfC,aAAc,GACdC,OAAQ,SAACC,GAAD,OAAQlC,EAAUkC,IAC1BC,WAAY,CACVC,OAAQ,oBACRC,OAAQ,oBACRC,cAAe,wBATnB,SAWG/B,UAOMgC,cAAMC,KAAK/C","file":"static/js/14.9cc29b02.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { IoChevronBackOutline, IoChevronForwardOutline, IoHammerOutline } from 'react-icons/io5';\r\n\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\n\r\nimport './Rooms.scss';\r\nimport img from '../../../assets/images/dan-gold-4HG3Ca3EzWw-unsplash.jpg';\r\nimport { BiDoorOpen } from 'react-icons/bi';\r\nimport { GiBathtub, GiKnifeFork } from 'react-icons/gi';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nSwiperCore.use([Navigation]);\r\n\r\nconst Rooms = ({ data, selectedIndex, setSelectedIndex, discount }) => {\r\n  const [swiper, setSwiper] = useState(null);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => swiper && swiper.update());\r\n\r\n  const options = data?.map((el, i) => {\r\n    const classes = ['rooms__item'];\r\n    if (i === selectedIndex) classes.push('rooms__item--active');\r\n    return (\r\n      <SwiperSlide \r\n        className={classes.join(' ')} \r\n        key={i} \r\n        tabIndex=\"0\"\r\n        onClick={() => {\r\n          setSelectedIndex(i);\r\n          history.push(`${location.pathname}#`);\r\n          setTimeout(() => {\r\n            history.push(`${location.pathname}#details`);\r\n          }, 0);\r\n        }}>\r\n        <figure className=\"rooms__item__figure\">\r\n          <img className=\"img img--contain\" alt=\"standard\" src={img} />\r\n          {i === selectedIndex && <div className=\"rooms__item__badge\">Selected</div>}\r\n          {el.offers && el.offers.length > 0 && (\r\n            <span className=\"rooms__item__badge rooms__item__badge--tag\">\r\n              {/* {discount.discount}% off */}\r\n              {el.offers.length} offer/s\r\n            </span>\r\n          )}\r\n        </figure>\r\n        <div className=\"rooms__item__body\">\r\n          <span className=\"rooms__item__title\">Room option {i+1}</span>\r\n          <div className=\"rooms__item__features\">\r\n            <div className=\"flex aic mb-1\">\r\n              <BiDoorOpen className=\"icon--sm icon--grey mr-1\" />\r\n              Rooms: {el.numberOfRooms}\r\n            </div>\r\n            <div className=\"flex aic mb-1\">\r\n              <IoHammerOutline className=\"icon--sm icon--grey mr-1\" />\r\n              Condition: {el.condition}\r\n            </div>\r\n            <div className=\"flex aic mb-1\">\r\n              <GiKnifeFork className=\"icon--sm icon--grey mr-1\" />\r\n              Kitchen: {el.kitchen}\r\n            </div>\r\n            <div className=\"flex aic\">\r\n              <GiBathtub className=\"icon--sm icon--grey mr-1\" />\r\n              Bathroom: {el.bath}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"rooms__item__footer\">\r\n          <span className=\"rooms__item__price\">\r\n            ${el.price}\r\n            <span className=\"f-sm\">&nbsp;/&nbsp;week</span>\r\n          </span>\r\n        </div>\r\n      </SwiperSlide>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div className=\"rooms\" id=\"options\">\r\n      <h3 className=\"heading heading--3 mb-15\">Room options</h3>\r\n      <div className=\"flex w-100 mb-2 aic\">\r\n        <button className=\"btn--slider rooms__btn--prev\">\r\n          <IoChevronBackOutline className=\"icon--sm icon--dark\" />\r\n        </button>\r\n        <button className=\"btn--slider rooms__btn--next\">\r\n          <IoChevronForwardOutline className=\"icon--sm icon--dark\" />\r\n        </button>\r\n        <span className=\"f-lg c-grace ml-1\">Slide to see other options</span>\r\n      </div>\r\n      <div>\r\n      <Swiper \r\n        className=\"rooms__list\"\r\n        simulateTouch={false}\r\n        slidesPerView={3}\r\n        spaceBetween={20}\r\n        onInit={(sw) => setSwiper(sw)}\r\n        navigation={{\r\n          nextEl: '.rooms__btn--next',\r\n          prevEl: '.rooms__btn--prev',\r\n          disabledClass: 'btn--slider-disabled'\r\n        }}>\r\n        {options}\r\n      </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Rooms);\r\n"],"sourceRoot":""}