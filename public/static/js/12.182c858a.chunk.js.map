{"version":3,"sources":["../node_modules/email-validator/index.js","axios.js","containers/Auth/Signin/Signin.js"],"names":["tester","exports","validate","email","length","test","parts","split","some","part","axiosInstance","axios","create","baseURL","headers","Signin","useState","showPassword","setShowPassword","error","setError","remember","setRemember","history","useHistory","dispatch","useDispatch","emailRef","useRef","passRef","className","onSubmit","e","preventDefault","current","value","emailValidator","post","password","then","res","console","log","replace","data","user","token","actions","catch","er","response","message","placeholder","type","ref","minLength","onClick","prev","tabIndex","to"],"mappings":"yHAEA,IAAIA,EAAS,iIAKbC,EAAQC,SAAW,SAASC,GAE3B,IAAKA,EACJ,OAAO,EAER,GAAGA,EAAMC,OAAO,IACf,OAAO,EAGR,IADYJ,EAAOK,KAAKF,GAEvB,OAAO,EAGR,IAAIG,EAAQH,EAAMI,MAAM,KACxB,QAAGD,EAAM,GAAGF,OAAO,MAGDE,EAAM,GAAGC,MAAM,KAClBC,MAAK,SAASC,GAAQ,OAAOA,EAAKL,OAAO,Q,iCCzBzD,YAEMM,EAFN,OAEsBC,EAAMC,OAAO,CACjCC,QAAS,4BACTC,QAAS,CACP,OAAU,mBACV,eAAgB,sBAILJ,O,wIC6FAK,UA5FA,WAAO,IAAD,EACqBC,oBAAS,GAD9B,mBACZC,EADY,KACEC,EADF,OAEOF,mBAAS,MAFhB,mBAEZG,EAFY,KAELC,EAFK,OAGaJ,oBAAS,GAHtB,mBAGZK,EAHY,KAGFC,EAHE,KAIbC,EAAUC,cACVC,EAAWC,cAEXC,EAAWC,mBACXC,EAAUD,mBA8BhB,OACE,uBAAME,UAAU,aAAaC,SAAU,SAACC,GAAD,OA7BxB,SAACA,GAGhB,OAFAA,EAAEC,iBAG2B,KAA3BN,EAASO,QAAQC,OACS,KAA1BN,EAAQK,QAAQC,MACTf,EAAS,qCAEbgB,WAAwBT,EAASO,QAAQC,YAG9CxB,IAAM0B,KAAK,eAAgB,CACzBlC,MAAOwB,EAASO,QAAQC,MACxBG,SAAUT,EAAQK,QAAQC,MAC1Bd,aACCkB,MAAK,SAAAC,GACNC,QAAQC,IAAIF,GACZpB,EAAS,MACTG,EAAQoB,QAAQ,KAChBH,EAAII,KAAKC,KAAKC,MAAQN,EAAII,KAAKE,MAC/BrB,EAASsB,IAAcP,EAAII,KAAKC,UAC/BG,OAAM,SAAAC,GACHA,EAAGC,SACL9B,EAAS6B,EAAGC,SAASN,KAAKO,SACvB/B,EAAS6B,EAAGE,YAfV/B,EAAS,sCAoB4BW,CAASC,IAAvD,UACGb,GAAS,mBAAGW,UAAU,iBAAb,SAA+BX,IACzC,wBAAOW,UAAU,qBAAjB,UACE,uBACEA,UAAU,gCACVsB,YAAY,qBACZC,KAAK,QACLC,IAAK3B,IACP,sBAAMG,UAAU,oBAAhB,mCAEF,wBAAOA,UAAU,qBAAjB,UACE,uBACEA,UAAU,gCACVsB,YAAY,gBACZC,KAAK,WACLE,UAAU,IACVD,IAAKzB,IACP,wBACEwB,KAAK,SACLvB,UAAU,aACV0B,QAAS,WACPtC,GAAgB,SAAAuC,GAAI,OAAKA,KACA,aAAzB5B,EAAQK,QAAQmB,KACZxB,EAAQK,QAAQmB,KAAO,OACvBxB,EAAQK,QAAQmB,KAAO,YAP/B,SASMpC,EAEE,cAAC,IAAD,CAAOa,UAAU,4BADjB,cAAC,IAAD,CAAYA,UAAU,4BAI9B,sBAAMA,UAAU,oBAAhB,8BAEF,sBACEA,UAAS,wCAAmCT,EAAW,kCAAoC,IAC3FqC,SAAS,IACTF,QAAS,kBAAMlC,GAAY,SAAAmC,GAAI,OAAKA,MAHtC,UAII,sBAAM3B,UAAU,uBAAhB,SACGT,GAAY,cAAC,IAAD,CAASS,UAAU,0BALtC,iBASA,yBAAQA,UAAU,+BAA+BuB,KAAK,SAAtD,kBAEE,cAAC,IAAD,CAAoBvB,UAAU,YAEhC,cAAC,IAAD,CAAM6B,GAAG,uBAAuB7B,UAAU,oCAA1C","file":"static/js/12.182c858a.chunk.js","sourcesContent":["\"use strict\";\r\n\r\nvar tester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\r\n// Thanks to:\r\n// http://fightingforalostcause.net/misc/2006/compare-email-regex.php\r\n// http://thedailywtf.com/Articles/Validating_Email_Addresses.aspx\r\n// http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses/201378#201378\r\nexports.validate = function(email)\r\n{\r\n\tif (!email)\r\n\t\treturn false;\r\n\t\t\r\n\tif(email.length>254)\r\n\t\treturn false;\r\n\r\n\tvar valid = tester.test(email);\r\n\tif(!valid)\r\n\t\treturn false;\r\n\r\n\t// Further checking of some things regex can't handle\r\n\tvar parts = email.split(\"@\");\r\n\tif(parts[0].length>64)\r\n\t\treturn false;\r\n\r\n\tvar domainParts = parts[1].split(\".\");\r\n\tif(domainParts.some(function(part) { return part.length>63; }))\r\n\t\treturn false;\r\n\r\n\treturn true;\r\n}","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:3005/api',\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default axiosInstance;","import React, { useRef, useState } from \"react\";\r\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\r\nimport { HiArrowNarrowRight } from \"react-icons/hi\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as emailValidator from 'email-validator';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { GoCheck } from \"react-icons/go\";\r\n\r\nimport axios from '../../../axios';\r\nimport * as actions from '../../../store/actions';\r\n\r\nconst Signin = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [remember, setRemember] = useState(false);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      emailRef.current.value === '' || \r\n      passRef.current.value === ''\r\n    ) return setError('Please fill out all of the fields');\r\n    \r\n    if (!emailValidator.validate(emailRef.current.value))\r\n      return setError('Please provide valid email address');\r\n\r\n    axios.post('/users/login', {\r\n      email: emailRef.current.value,\r\n      password: passRef.current.value,\r\n      remember\r\n    }).then(res => {\r\n      console.log(res);\r\n      setError(null);\r\n      history.replace('/');\r\n      res.data.user.token = res.data.token;\r\n      dispatch(actions.login(res.data.user))\r\n    }).catch(er => {\r\n      if (er.response)\r\n        setError(er.response.data.message);\r\n      else setError(er.message);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className=\"auth__body\" onSubmit={(e) => onSubmit(e)}>\r\n      {error && <p className=\"input__invalid\">{error}</p>}\r\n      <label className=\"input__label mb-15\">\r\n        <input \r\n          className=\"input input--main auth__input\" \r\n          placeholder=\"Your email address\" \r\n          type=\"email\"\r\n          ref={emailRef} />\r\n        <span className=\"input__label-text\">Your email address</span>\r\n      </label>\r\n      <label className=\"input__label mb-15\">\r\n        <input \r\n          className=\"input input--main auth__input\" \r\n          placeholder=\"Your password\" \r\n          type=\"password\"\r\n          minLength=\"6\"\r\n          ref={passRef} />\r\n        <button \r\n          type=\"button\"\r\n          className=\"input__btn\" \r\n          onClick={() => {\r\n            setShowPassword(prev => !prev);\r\n            passRef.current.type === 'password' \r\n              ? passRef.current.type = 'text' \r\n              : passRef.current.type = 'password';\r\n          }}>\r\n            {!showPassword\r\n              ? <BsEyeSlash className=\"icon--sm icon--grey-l\" />\r\n              : <BsEye className=\"icon--sm icon--tertiary\" />\r\n            }\r\n        </button>\r\n        <span className=\"input__label-text\">Your password</span>\r\n      </label>\r\n      <div \r\n        className={`input__checkbox-wrapper mb-15 ${remember ? 'input__checkbox-wrapper--active' : ''}`}\r\n        tabIndex=\"0\" \r\n        onClick={() => setRemember(prev => !prev)}>\r\n          <span className=\"input__checkbox mr-5\">\r\n            {remember && <GoCheck className=\"icon icon--tertiary\" />}\r\n          </span>\r\n          Remember me\r\n      </div>\r\n      <button className=\"btn btn--cta btn--arrow mb-1\" type=\"submit\">\r\n        Login\r\n        <HiArrowNarrowRight className=\"icon\" />\r\n      </button>\r\n      <Link to=\"/auth/forgotpassword\" className=\"inline tc f-thin f-mid c-tertiary\">\r\n        Forgot password?\r\n      </Link>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Signin;"],"sourceRoot":""}